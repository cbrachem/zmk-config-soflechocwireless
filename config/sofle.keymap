/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    macros {
        end_sentence: end_sentence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp SPACE &sk LSHIFT>;
        };
    };

    behaviors {
        slt: sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sk>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&tog 2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_doubleshift {
            timeout-ms = <150>;
            key-positions = <36 49>;
            bindings = <&caps_word>;
        };

        combo_shifttab {
            timeout-ms = <150>;
            key-positions = <56 57>;
            bindings = <&caps_word>;
        };

        combo_underscore {
            timeout-ms = <150>;
            key-positions = <46 47>;
            bindings = <&kp UNDERSCORE>;
        };

        reset_layer {
            timeout-ms = <150>;
            key-positions = <1 12>;
            bindings = <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                 &kp N6          &kp N7     &kp N8     &kp N9     &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                                  &kp Y           &kp U      &kp I      &kp O      &kp P     &kp BSPC
&kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                                  &kp H           &kp J      &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B           &kp C_MUTE    &tog 3   &kp N           &kp M      &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT  &kp LCTRL  &td0            &kp SPACE     &kp RET  &slt 2 RSHIFT   &kp RCTRL  &kp RALT   &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                            &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                            &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                         &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans         &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &end_sentence  &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  |   7  |    8  |    9  |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  |   4  |    5  |    6  | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     |   0  |   1  |    2  |    3  |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &out OUT_USB  &out OUT_BLE  &trans    &trans     &trans   &trans
&trans      &kp INS       &kp N7        &kp N8        &kp N9        &trans                               &kp PG_UP     &trans        &kp UP    &trans     &kp N0   &trans
&trans      &kp LALT      &kp N4        &kp N5        &kp N6        &kp CLCK                             &kp PG_DN     &kp LEFT      &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp N0        &kp N1        &kp N2        &kp N3        &trans        &trans         &trans  &trans        &trans        &trans    &trans     &trans   &trans
                          &trans        &trans        &trans        &trans        &end_sentence  &trans  &trans        &trans        &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        engrammer {
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                             &kp N6    &kp N7  &kp N8  &kp N9  &kp N0  &kp BSLH
&kp ESC    &kp B   &kp Y   &kp O   &kp U   &kp SQT                            &kp SEMI  &kp L   &kp D   &kp W   &kp V   &kp Z
&trans     &kp C   &kp I   &kp E   &kp A   &kp COMMA                          &kp DOT   &kp H   &kp T   &kp S   &kp N   &kp Q
&kp LSHFT  &kp G   &kp X   &kp J   &kp K   &kp MINUS  &trans       &tog 3     &kp BSPC  &kp R   &kp M   &kp F   &kp P   &kp LSHFT
                   &trans  &trans  &trans  &kp RET    &kp SPACE    &kp SPACE  &kp RET   &trans  &trans  &trans
            >;
        };
    };
};
